{"version":3,"sources":["images/infoTooltip/reject.svg","images/infoTooltip/resolve.svg","images/header/logo.svg","contexts/CurrentUserContext.js","utils/Api.js","utils/utils.js","components/AuthInfo.js","components/ui/Hamburger.js","components/Header.js","components/Card.js","components/Main.js","components/Form.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ImagePopup.js","components/Footer.js","errors/BadRequestError.js","errors/UnauthorizedError.js","utils/auth.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/AuthInfoMobile.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","CurrentUserContext","React","createContext","api","options","this","_url","baseUrl","_headers","headers","path","parameters","fetch","then","res","ok","json","Promise","reject","status","_sendRequest","newUserInfo","method","body","JSON","stringify","name","about","newCard","title","link","id","isLiked","avatar","url","authorization","AuthInfo","email","signOut","className","onClick","Hamburger","isAuthInfoOpened","onHamburgerClick","hamburgerClassName","Header","loggedIn","pathname","useLocation","linkText","linkPath","src","logoPath","alt","to","Card","props","currentUser","useContext","card","onCardClick","onCardLike","onCardDelete","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","key","Form","formName","onSubmit","onClose","children","isLoading","disabled","submitButtonText","isPopup","entranceText","entranceLinkText","noConfirm","PopupWithForm","isOpen","EditProfilePopup","onUpdateUser","nameRef","useRef","descriptionRef","useState","setName","description","setDescription","nameError","setNameError","descriptionError","setDescriptionError","nameValid","setNameValid","descriptionValid","setDescriptionValid","setDisabled","handleChange","evt","target","value","current","validationMessage","validity","valid","useEffect","preventDefault","htmlFor","ref","placeholder","minLength","maxLength","pattern","required","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","urlError","setUrlError","urlValid","setUrlValid","AddPlacePopup","titleRef","linkRef","setTitle","setLink","titleError","setTitleError","linkError","setLinkError","titleValid","setTitleValid","linkValid","setLinkValid","ConfirmPopup","onConfirmDelete","ImagePopup","Footer","BadRequestError","message","rest","Error","BASE_URL","getContent","token","err","UnauthorizedError","data","catch","console","log","Login","onLogin","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","emailValid","setEmailValid","passwordValid","setPasswordValid","inputType","setInputType","emailRef","passwordRef","escape","require","localStorage","setItem","auth","autoComplete","onKeyDown","Register","onRegister","error","ProtectedRoute","Component","component","InfoTooltip","iconPath","text","AuthInfoMobile","authInfoMobileClassNAme","App","setLoggedIn","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isInfoTooltipOpen","setInfoTooltipOpen","isImageOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","isConfirmPopupOpen","setConfirmPopupOpen","cardToDelete","setCardToDelete","setLoading","setAuthInfoOpened","rejectPath","setMessage","location","history","useHistory","handleSignOut","removeItem","push","closeAllPopups","getUserInfo","getItem","jwt","getInitialCards","cardData","Provider","locaction","exact","changeLikeCardStatus","newCards","c","resolvePath","userData","updateUserInfo","newUser","finally","newAvatar","updateUserAvatar","addNewCard","deleteCard","filter","item","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cb8b147.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reject.4072126c.svg\";","module.exports = __webpack_public_path__ + \"static/media/resolve.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import { apiOptions } from './utils';\n\nclass Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  //Отправить запрос\n  _sendRequest(path, parameters) {\n    return fetch(`${this._url}${path}`, parameters).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(res.status);\n    });\n  }\n\n  //Получить данные пользователя\n  getUserInfo() {\n    return this._sendRequest(`users/me`, {\n      headers: this._headers,\n    });\n  }\n\n  //Получить карточки\n  getInitialCards() {\n    return this._sendRequest(`cards`, { headers: this._headers });\n  }\n\n  //Обновить информацию о пользователе\n  updateUserInfo(newUserInfo) {\n    return this._sendRequest(`users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newUserInfo.name,\n        about: newUserInfo.about,\n      }),\n    });\n  }\n\n  //Добавить новую карточку\n  addNewCard(newCard) {\n    return this._sendRequest(`cards`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: newCard.title,\n        link: newCard.link,\n      }),\n      headers: this._headers,\n    });\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return this._sendRequest(`cards/likes/${id}`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers,\n    });\n  }\n\n  //Удалить фото\n  deleteCard(id) {\n    return this._sendRequest(`cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    });\n  }\n\n  //Обновить аватар\n  updateUserAvatar(avatar) {\n    return this._sendRequest(`users/me/avatar`, {\n      method: 'PATCH',\n      body: JSON.stringify({ avatar: avatar.url }),\n      headers: this._headers,\n    });\n  }\n}\n\nexport const api = new Api(apiOptions);\n","export const apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12/',\n  headers: {\n    authorization: 'b40f325a-73c8-493d-8833-d885268eb953',\n    'Content-Type': 'application/json',\n  },\n};\n","import React from 'react';\n\nfunction AuthInfo({ email, signOut }) {\n  return (\n    <div className='auth-info'>\n      <span>{email}</span>\n      <button className='auth-info__signout' onClick={signOut}>Выйти</button>\n    </div>\n  );\n}\n\nexport default AuthInfo;\n","import React from 'react';\n\nfunction Hamburger({ isAuthInfoOpened, onHamburgerClick }) {\n  const hamburgerClassName =\n    `hamburger\n    ${isAuthInfoOpened\n      ? 'hamburger_opened'\n      : 'hamburger_closed'}`;\n\n  return (\n    <button\n      className={hamburgerClassName}\n      onClick={onHamburgerClick}>\n      <span></span>\n    </button>\n  )\n}\n\nexport default Hamburger;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport logoPath from '../images/header/logo.svg';\nimport AuthInfo from './AuthInfo';\nimport Hamburger from './ui/Hamburger';\n\nfunction Header({\n  loggedIn, email, signOut, isAuthInfoOpened, onHamburgerClick,\n}) {\n  const { pathname } = useLocation();\n  const linkText = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\n  const linkPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\n\n  return (\n    <header className='header'>\n      <img src={logoPath} alt='Логотип сайта' className='logo' />\n      <h1 className='visually-hidden'>\n        Место: интерактивный сервис для добавления фотографий\n      </h1>\n      {loggedIn\n        ? (<>\n          <AuthInfo email={email} signOut={signOut} />\n          <Hamburger\n            isAuthInfoOpened={isAuthInfoOpened}\n            onHamburgerClick={onHamburgerClick} />\n        </>)\n        : (<Link to={linkPath} className=\"link header__link\">{linkText}</Link>)\n      }\n    </header >\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const { card, onCardClick, onCardLike, onCardDelete } = props;\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = `button ${\r\n    isOwn ? 'card__delete ' : 'card__delete_hidden'\r\n  }`;\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `card__like button ${\r\n    isLiked && 'card__like_active'\r\n  }`;\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <li className='card'>\r\n      <button\r\n        type='button'\r\n        className={cardDeleteButtonClassName}\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n      <div className='card__container'>\r\n        <img\r\n          src={card.link}\r\n          alt={card.name}\r\n          className='card__photo'\r\n          onClick={handleClick}\r\n        />\r\n      </div>\r\n      <h2 className='card__caption'>{card.name}</h2>\r\n      <div className='card__like-block'>\r\n        <button\r\n          type='button'\r\n          className={cardLikeButtonClassName}\r\n          onClick={handleLikeClick}\r\n        ></button>\r\n        <span className='card__counter'>{card.likes.length}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const {\r\n    onEditAvatar,\r\n    onEditProfile,\r\n    onAddPlace,\r\n    onCardClick,\r\n    cards,\r\n    onCardLike,\r\n    onCardDelete,\r\n  } = props;\r\n\r\n  return (\r\n    <div className='main'>\r\n      <section className='profile'>\r\n        <div className='profile__avatar-overlay'>\r\n          <img\r\n            src={currentUser.avatar}\r\n            alt='Аватар пользователя'\r\n            className='profile__avatar'\r\n          />\r\n          <button\r\n            className='profile__button_action_avatar-change'\r\n            onClick={onEditAvatar}\r\n          ></button>\r\n        </div>\r\n        <div className='profile__info'>\r\n          <button\r\n            type='button'\r\n            className='button profile__button profile__button_action_edit'\r\n            onClick={onEditProfile}\r\n          ></button>\r\n          <p className='profile__name'>{currentUser.name}</p>\r\n          <p className='profile__about'>{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          type='button'\r\n          className='button profile__button profile__button_action_add'\r\n          onClick={onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <ul className='elements'>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card._id}\r\n            card={card}\r\n            onCardClick={onCardClick}\r\n            onCardLike={onCardLike}\r\n            onCardDelete={onCardDelete}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Form(props) {\n  const {\n    formName,\n    onSubmit,\n    onClose,\n    title,\n    children,\n    isLoading,\n    disabled,\n    submitButtonText,\n    isPopup,\n    path,\n    entranceText,\n    entranceLinkText,\n    noConfirm,\n  } = props;\n\n  return (\n    <form\n      className={`form ${isPopup && 'form__modal'} form_type_${formName}`}\n      name={formName}\n      onSubmit={onSubmit}\n    >\n      {\n        isPopup && (<button\n          type='reset'\n          className={\n            `button button_close\n            form__button\n            form__button_close\n            form__button_close_type_${formName}`\n          }\n          onClick={onClose} />)\n      }\n      <fieldset className={`form__input-container form__input-container_type_${formName}`}>\n        <legend className='form__heading'>{title}</legend>\n        {children}\n      </fieldset>\n      <div>\n        {!noConfirm\n          && (<button\n            type='submit'\n            className=\n            {\n              `button form__button form__button_submit form__button_submit_type_${formName}\n              ${isLoading && 'form__button_submit_loading'}`\n            }\n            disabled={disabled}\n          >{isLoading ? 'Сохранение...' : submitButtonText}\n          </button>)\n        }\n        {\n          !isPopup\n          && (<span>{entranceText} <Link to={path} className='link'>{entranceLinkText}</Link></span>)\n        }\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport Form from './Form';\n\nfunction PopupWithForm(props) {\n  const {\n    isOpen,\n    onSubmit,\n    onClose,\n    formName,\n    title,\n    children,\n    submitButtonText,\n    disabled,\n    isLoading,\n    noConfirm\n  } = props;\n\n  return (\n    <div className={`popup popup_type_${formName} ${isOpen && 'popup_opened'}`}>\n      <Form\n        isPopup={true}\n        formName={formName}\n        onSubmit={onSubmit}\n        onClose={onClose}\n        isLoading={isLoading}\n        title={title}\n        children={children}\n        disabled={disabled}\n        submitButtonText={submitButtonText}\n        noConfirm={noConfirm}\n      ></Form>\n\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React, { useState, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const { isOpen, onClose, onUpdateUser, isLoading } = props;\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const nameRef = useRef();\n  const descriptionRef = useRef();\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [descriptionError, setDescriptionError] = useState('');\n  const [nameValid, setNameValid] = useState(false);\n  const [descriptionValid, setDescriptionValid] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  React.useEffect(() => {\n    setDisabled(true);\n    setNameError('');\n    setDescriptionError('');\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    nameValid && descriptionValid ? setDisabled(false) : setDisabled(true);\n  }, [nameValid, descriptionValid, name, description]);\n\n  function handleChange(evt) {\n    evt.target.name === 'name'\n      ? setName(evt.target.value)\n      : setDescription(evt.target.value);\n\n    validate();\n  }\n\n  function validate() {\n    setNameError(nameRef.current.validationMessage);\n    setDescriptionError(descriptionRef.current.validationMessage);\n\n    !nameRef.current.validity.valid ? setNameValid(false) : setNameValid(true);\n    !descriptionRef.current.validity.valid\n      ? setDescriptionValid(false)\n      : setDescriptionValid(true);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      formName='user'\n      title='Редактировать профиль'\n      submitButtonText='Сохранить'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      disabled={disabled}\n      isLoading={isLoading}\n    >\n      <label htmlFor='name' className='form__field'>\n        <input\n          ref={nameRef}\n          type='text'\n          className='form__input'\n          id='name'\n          name='name'\n          value={name || ''}\n          placeholder='Имя'\n          minLength='2'\n          maxLength='40'\n          pattern='[А-Яа-яA-Za-z -]{1,}'\n          required\n          onChange={handleChange}\n        />\n        <span\n          className={`form__input-error ${\n            !nameValid && 'form__input-error_active'\n            }`}\n          id='name-error'\n        >\n          {nameError}\n        </span>\n      </label>\n      <label htmlFor='about' className='form__field'>\n        <input\n          ref={descriptionRef}\n          type='text'\n          className='form__input'\n          id='about'\n          name='about'\n          value={description || ''}\n          placeholder='О себе'\n          minLength='2'\n          maxLength='200'\n          required\n          onChange={handleChange}\n        />\n        <span\n          className={`form__input-error ${\n            !descriptionValid && 'form__input-error_active'\n            }`}\n          id='about-error'\n        >\n          {descriptionError}\n        </span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React, { useState, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const { isOpen, onClose, onUpdateAvatar, isLoading } = props;\n  const inputRef = useRef('');\n\n  const [urlError, setUrlError] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [urlValid, setUrlValid] = useState(false);\n\n  React.useEffect(() => {\n    setDisabled(true);\n    setUrlError('');\n    inputRef.current.value = '';\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    urlValid ? setDisabled(false) : setDisabled(true);\n  }, [urlValid, inputRef.current.value]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({ url: inputRef.current.value });\n  }\n\n  function validate() {\n    setUrlError(inputRef.current.validationMessage);\n\n    !inputRef.current.validity.valid ? setUrlValid(false) : setUrlValid(true);\n  }\n\n  return (\n    <PopupWithForm\n      formName='avatar'\n      title='Обновить аватар'\n      submitButtonText='Сохранить'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      disabled={disabled}\n      isLoading={isLoading}\n    >\n      <label htmlFor='url' className='form__field'>\n        <input\n          ref={inputRef}\n          type='url'\n          className='form__input'\n          id='url'\n          name='url'\n          placeholder='Ссылка на аватар'\n          required\n          onChange={validate}\n        />\n        <span\n          className={`form__input-error ${\n            !urlValid && 'form__input-error_active'\n            }`}\n          id='url-error'\n        >\n          {urlError}\n        </span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React, { useState, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n  const { isOpen, onClose, onAddPlace, isLoading } = props;\n\n  const titleRef = useRef();\n  const linkRef = useRef();\n\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [linkError, setLinkError] = useState('');\n  const [titleValid, setTitleValid] = useState(false);\n  const [linkValid, setLinkValid] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n\n  React.useEffect(() => {\n    setDisabled(true);\n    setTitleError('');\n    setLinkError('');\n    setTitle('');\n    setLink('');\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    titleValid && linkValid ? setDisabled(false) : setDisabled(true);\n  }, [titleValid, linkValid, link]);\n\n  function handleChange(evt) {\n    evt.target.name === 'title'\n      ? setTitle(evt.target.value)\n      : setLink(evt.target.value);\n\n    validate();\n  }\n\n  function validate() {\n    setTitleError(titleRef.current.validationMessage);\n    setLinkError(linkRef.current.validationMessage);\n\n    !titleRef.current.validity.valid ? setTitleValid(false) : setTitleValid(true);\n    !linkRef.current.validity.valid ? setLinkValid(false) : setLinkValid(true);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      title,\n      link,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      formName='photo'\n      title='Новое место'\n      submitButtonText='Создать'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      disabled={disabled}\n      isLoading={isLoading}\n    >\n      <label htmlFor='title' className='form__field'>\n        <input\n          ref={titleRef}\n          className='form__input'\n          id='title'\n          name='title'\n          value={title || ''}\n          placeholder='Название'\n          minLength='1'\n          maxLength='30'\n          required\n          onChange={handleChange}\n        />\n        <span\n          className={`form__input-error ${!titleValid && 'form__input-error_active'\n            }`}\n          id='title-error'\n        >\n          {titleError}\n        </span>\n      </label>\n      <label htmlFor='link' className='form__field'>\n        <input\n          ref={linkRef}\n          type='url'\n          className='form__input'\n          id='link'\n          name='link'\n          value={link || ''}\n          placeholder='Ссылка на картинку'\n          required\n          onChange={handleChange}\n        />\n        <span\n          className={`form__input-error ${!linkValid && 'form__input-error_active'\n            }`}\n          id='link-error'\n        >\n          {linkError}\n        </span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction ConfirmPopup(props) {\n  const { isOpen, onClose, onConfirmDelete, isLoading } = props;\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onConfirmDelete();\n  }\n\n  return (\n    <PopupWithForm\n      formName='delete'\n      title='Вы уверены?'\n      submitButtonText='Да'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n    ></PopupWithForm>\n  );\n}\n\nexport default ConfirmPopup;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  const { isOpen, onClose, link, name } = props;\n\n  return (\n    <div className={`popup photo ${isOpen && 'popup_opened'}`}>\n      <figure className='photo__figure'>\n        <button\n          type='reset'\n          className='photo__close button button_close'\n          onClick={onClose}\n        ></button>\n        <img className='photo__img' src={link} alt={name} />\n        <figcaption className='photo__caption'>{name}</figcaption>\n      </figure>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","class BadRequestError extends Error {\n  constructor(message, ...rest) {\n    super(...rest);\n    this.status = 400;\n    this.message = message;\n  }\n}\n\nexport default BadRequestError;\n","class BadRequestError extends Error {\n  constructor(message, ...rest) {\n    super(...rest);\n    this.status = 401;\n    this.message = message;\n  }\n}\n\nexport default BadRequestError;\n","import BadRequestError from '../errors/BadRequestError';\nimport UnauthorizedError from '../errors/UnauthorizedError';\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\n// Отправляем запрос за регистрацию\nexport const register = (password, email) => fetch(`${BASE_URL}/signup`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ password, email }),\n})\n  .then((res) => {\n    if (!res.ok) {\n      return res.json()\n        .then((err) => {\n          if (err.error) {\n            throw new BadRequestError(err.error);\n          } else {\n            throw new BadRequestError(err.message);\n          }\n        });\n    }\n    return res.json();\n  });\n\n// Отправляем запрос за авторизацию\nexport const authorize = (password, email) => fetch(`${BASE_URL}/signin`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({ password, email }),\n})\n  .then((res) => {\n    if (res.status === 400) {\n      throw new BadRequestError('Не передано одно из полей');\n    }\n    else if (res.status === 401) {\n      throw new UnauthorizedError('Пользователь с таким email не найден');\n    }\n    return res.json();\n  })\n  .then((data) => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data.token;\n    }\n  });\n\n// Отправляем запрос за получение токена\nexport const getContent = (token) => fetch(`${BASE_URL}/users/me`, {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`,\n  },\n})\n  .then((res) => {\n    if (!res.ok) {\n      return res.json()\n        .then((err) => {\n          throw new UnauthorizedError(err.message);\n        });\n    }\n    return res.json()\n  })\n  .then((data) => data)\n  .catch(err => console.log(err.message));\n\n","import React, { useState, useRef } from 'react';\nimport Form from './Form';\nimport * as auth from '../utils/auth';\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [inputType, setInputType] = useState('password');\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const escape = require('escape-html')\n\n  function handleChange(evt) {\n    evt.target.name === 'email'\n      ? setEmail(evt.target.value)\n      : setPassword(evt.target.value);\n\n    validate();\n  }\n\n  function validate() {\n    setEmailError(emailRef.current.validationMessage);\n    setPasswordError(passwordRef.current.validationMessage);\n\n    !emailRef.current.validity.valid ? setEmailValid(false) : setEmailValid(true);\n    !passwordRef.current.validity.valid\n      ? setPasswordValid(false)\n      : setPasswordValid(true);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    if (!email && !password) return;\n    auth.authorize(escape(password), email)\n      .then((token) => {\n        setEmail('');\n        setPassword('');\n        onLogin(token);\n      })\n      .catch((err) => onLogin(err));\n  }\n\n  function handleShowPassword() {\n    inputType === 'password' ? setInputType('text') : setInputType('password');\n  }\n\n  return (\n    <div className='entrance'>\n      <Form formName='entrance'\n        title='Вход'\n        submitButtonText='Войти'\n        isPopup={false}\n        path='/sign-up'\n        entranceText='Ещё не зарегистрированы?'\n        entranceLinkText='Регистрация'\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor='email' className='form__field'>\n          <input\n            ref={emailRef}\n            type='email'\n            className='form__input form__input_type_entrance'\n            id='email'\n            name='email'\n            value={email || ''}\n            placeholder='Email'\n            minLength='6'\n            maxLength='40'\n            autoComplete='email'\n            required\n            onChange={handleChange}\n          />\n          <span\n            className={`form__input-error ${!emailValid && 'form__input-error_active'}`}\n            id='email-error'\n          >\n            {emailError}\n          </span>\n        </label>\n        <label htmlFor='password' className='form__field'>\n          <input\n            ref={passwordRef}\n            type={inputType}\n            className='form__input form__input_type_entrance'\n            id='password'\n            name='password'\n            value={password || ''}\n            placeholder='Пароль'\n            minLength='6'\n            maxLength='30'\n            autoComplete='current-password'\n            required\n            onChange={handleChange}\n          />\n          <button\n            type='button'\n            className={`form__input_password form__input_password_${inputType} button`}\n            onClick={handleShowPassword}\n            onKeyDown={(evt) => evt.preventDefault}></button>\n          <span\n            className={`form__input-error ${!passwordValid && 'form__input-error_active'}`}\n            id='password-error'\n          >\n            {passwordError}\n          </span>\n        </label>\n      </Form>\n    </div >\n  );\n}\n\nexport default Login;\n","import React, { useState, useRef } from 'react';\nimport Form from './Form';\nimport * as auth from '../utils/auth';\n\nfunction Register({ onRegister }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [inputType, setInputType] = useState('password');\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const escape = require('escape-html')\n\n  function handleChange(evt) {\n    const { value } = evt.target;\n    evt.target.name === 'email'\n      ? setEmail(value)\n      : setPassword(value);\n    validate();\n  }\n\n  function validate() {\n    setEmailError(emailRef.current.validationMessage);\n\n    setPasswordError(passwordRef.current.validationMessage);\n\n    !emailRef.current.validity.valid ? setEmailValid(false) : setEmailValid(true);\n    !passwordRef.current.validity.valid\n      ? setPasswordValid(false)\n      : setPasswordValid(true);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    auth.register(escape(password), email)\n      .then((res) => {\n        if (res) {\n          onRegister(res);\n          return;\n        }\n      })\n      .catch((err) => onRegister(err));\n  }\n\n  function handleShowPassword() {\n    inputType === 'password' ? setInputType('text') : setInputType('password');\n  }\n\n  return (\n    <div className='entrance'>\n      <Form formName='entrance'\n        title='Регистрация'\n        submitButtonText='Зарегистрироваться'\n        isPopup={false}\n        path='/sign-in'\n        entranceText='Уже зарегистрированы?'\n        entranceLinkText='Войти'\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor='email' className='form__field'>\n          <input\n            ref={emailRef}\n            type='email'\n            className='form__input form__input_type_entrance'\n            id='email'\n            name='email'\n            value={email || ''}\n            placeholder='Email'\n            minLength='6'\n            maxLength='40'\n            required\n            onChange={handleChange}\n          />\n          <span\n            className={`form__input-error ${!emailValid && 'form__input-error_active'}`}\n            id='email-error'\n          >\n            {emailError}\n          </span>\n        </label>\n        <label htmlFor='password' className='form__field'>\n          <input\n            ref={passwordRef}\n            type={inputType}\n            className='form__input form__input_type_entrance'\n            id='password'\n            name='password'\n            value={password || ''}\n            placeholder='Пароль'\n            minLength='6'\n            maxLength='30'\n            required\n            onChange={handleChange}\n          />\n          <button\n            type='button'\n            className={`form__input_password form__input_password_${inputType} button`}\n            onClick={handleShowPassword}\n            onKeyDown={(evt) => evt.preventDefault}></button>\n          <span\n            className={`form__input-error ${!passwordValid && 'form__input-error_active'}`}\n            id='password-error'\n          >\n            {passwordError}\n          </span>\n        </label>\n      </Form>\n    </div >\n  );\n}\n\nexport default Register;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => (\n  <Route>\n    {\n      () => (props.loggedIn ? <Component {...props} /> : <Redirect to='/sign-in' />)\n    }\n  </Route>\n);\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction InfoTooltip(props) {\n  const { isOpen, onClose, loggedIn, message } = props;\n\n  return (\n    <PopupWithForm\n      formName='infoTooltip'\n      noConfirm={true}\n      isOpen={isOpen}\n      onClose={onClose}\n      loggedIn={loggedIn}\n    >\n      <img src={message.iconPath} alt='Иконка авторизации' className='form__icon' />\n      <p className='form__text'>{message.text}</p>\n\n    </PopupWithForm >\n  );\n}\n\nexport default InfoTooltip;\n","import React from 'react';\n\nfunction AuthInfoMobile({ email, signOut, isAuthInfoOpened }) {\n  const authInfoMobileClassNAme =\n    `auth-info__mobile\n    ${isAuthInfoOpened\n      ? 'auth-info__mobile_opened'\n      : 'auth-info__mobile_closed'}`;\n  return (\n    <div className={authInfoMobileClassNAme}>\n      <span>{email}</span>\n      <button className='auth-info__signout' onClick={signOut}>Выйти</button>\n    </div>\n  );\n}\n\nexport default AuthInfoMobile;\n","import React, { useState } from 'react';\nimport {\n  Route, Switch, useLocation, Redirect, useHistory,\n} from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport '../index.css';\nimport { api } from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ImagePopup from './ImagePopup';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport AuthInfoMobile from './AuthInfoMobile';\nimport resolvePath from '../images/infoTooltip/resolve.svg';\nimport rejectPath from '../images/infoTooltip/reject.svg';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isImageOpen: false,\n    link: '',\n    name: '',\n  });\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState({});\n  const [isLoading, setLoading] = useState();\n  const [isAuthInfoOpened, setAuthInfoOpened] = useState(false);\n  const [message, setMessage] = useState({\n    iconPath: rejectPath,\n    text: 'Что-то пошло не так! Попробуйте ещё раз.'\n  });\n\n  const location = useLocation();\n  const history = useHistory();\n\n  // Получить данные пользователя\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => console.log(`Ошибка при загрузке информации о пользователе: ${err}`));\n  }, []);\n\n  // Проверить токен\n  React.useEffect(() => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      auth.getContent(jwt)\n        .then((res) => {\n          setLoggedIn(true);\n          setEmail(res.data.email);\n          history.push('/');\n        })\n        .catch(err => console.log(err));\n    }\n  }, [history]);\n\n  // Регистрация\n  function handleRegister(data) {\n    setMessage({ iconPath: resolvePath, text: 'Вы успешно зарегистрировались!' });\n    setInfoTooltipOpen(true);\n    if (data instanceof Error) {\n      setMessage({ iconPath: rejectPath, text: data.message });\n      return;\n    }\n    history.push('/sign-in');\n  }\n\n  // Авторизация\n  function handleLogin(data) {\n    setInfoTooltipOpen(true);\n    if (data instanceof Error) {\n      setMessage({ iconPath: rejectPath, text: data.message });\n      return;\n    }\n    auth.getContent(data)\n      .then((res) => {\n        setEmail(res.data.email);\n      });\n    setLoggedIn(true);\n    setMessage({ iconPath: resolvePath, text: 'Вы успешно вошли в приложение!' });\n    history.push('/');\n  }\n\n  // Выход\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmail('');\n    history.push('/sign-in');\n  }\n\n  // Получить карточки\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((cardData) => {\n        setCards(cardData);\n      })\n      .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\n  }, []);\n\n  // Лайк/дизлайк карточки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.log(`Ошибка при попытке поставить/снять лайк: ${err}`));\n  }\n\n  // Удалить карточку после подтверждения\n  function handleConfirm() {\n    api\n      .deleteCard(cardToDelete._id)\n      .then(() => setCards(cards.filter((item) => item !== cardToDelete)))\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\n    closeAllPopups();\n  }\n\n  // Кликнуть на удаление карточки\n  function handleCardDelete(card) {\n    setConfirmPopupOpen(true);\n    setCardToDelete(card);\n  }\n\n  // Открыть AvatarPopup\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  // Открыть EditProfilePopup\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  // Открыть AddPlacePopup\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  // Открыть увеличенное фото\n  function handleCardClick(card) {\n    const { link, name } = card;\n    setSelectedCard({ isImageOpen: true, link, name });\n  }\n\n  // Закрыть все попапы\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({\n      isImageOpen: false,\n      link: '',\n      name: '',\n    });\n    setConfirmPopupOpen(false);\n    setInfoTooltipOpen(false);\n  }\n\n  // Обновить аватар\n  function handleUpdateAvatar(newAvatar) {\n    setLoading(true);\n    api\n      .updateUserAvatar(newAvatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\n      .finally(() => setLoading(false));\n  }\n\n  // Обновить данные пользователя\n  function handleUpdateUser(userData) {\n    setLoading(true);\n    api\n      .updateUserInfo(userData)\n      .then((newUser) => setCurrentUser(newUser))\n      .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\n      .finally(() => setLoading(false));\n    closeAllPopups();\n  }\n\n  // Добавить карточку\n  function handleAddPlace(card) {\n    setLoading(true);\n    api\n      .addNewCard(card)\n      .then((newCard) => setCards([newCard, ...cards]))\n      .catch((err) => console.log(`Ошибка при добавлении новой карточки: ${err}`))\n      .finally(() => setLoading(false));\n    closeAllPopups();\n  }\n\n  // Открыть/закрыть email пользователя в мобильной версии\n  function openAuthInfo() {\n    setAuthInfoOpened(!isAuthInfoOpened);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        {(loggedIn && isAuthInfoOpened)\n          && (<AuthInfoMobile\n            email={email}\n            signOut={handleSignOut}\n            isAuthInfoOpened={isAuthInfoOpened} />)}\n        <Header\n          loggedIn={loggedIn}\n          locaction={location}\n          email={email}\n          signOut={handleSignOut}\n          isAuthInfoOpened={isAuthInfoOpened}\n          onHamburgerClick={openAuthInfo} />\n        <Switch>\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n          />\n          <Route path='/sign-in'>\n            <Login onLogin={handleLogin} />\n          </Route>\n          <Route path='/sign-up'>\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n        <Footer />\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          loggedIn={loggedIn}\n          message={message}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onConfirmDelete={handleConfirm}\n        />\n        <ImagePopup\n          name={selectedCard.name}\n          link={selectedCard.link}\n          onClose={closeAllPopups}\n          isOpen={selectedCard.isImageOpen}\n        />\n      </div>\n    </CurrentUserContext.Provider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}